for (i in 1:length(files_to_process)) {
input_df<-read.csv(files_to_process[i])
df_length<-length(input_df[,1])
if(df_length<min_length){
min_length<-df_length
}
}
#Compilers: rbind the traces, average the lights and times
B_df<-data.frame()
R_df<-data.frame()
T_df<-data.frame()
traces_df<-data.frame()
for (i in 1:length(files_to_process)) {
#Read in trace csv
input_df<-read.csv(files_to_process[i])
#Subset so all traces are the same length
subsetted_input_df<-input_df[1:min_length,]
#Add group name to df based on file name
csvname<-strsplit(files_to_process[i],split = "/")[[1]][length(strsplit(files_to_process[i],split = "/")[[1]])]
group_name<-unlist(strsplit(csvname,split="[.]"))[1]
subsetted_input_df$Group<-group_name
#cbind B_mean and R_mean to average later
if(i==1){
#initialize B_df and R_df
B_df<-data.frame(subsetted_input_df$B_mean)
colnames(B_df)<-group_name
R_df<-data.frame(subsetted_input_df$R_mean)
colnames(R_df)<-group_name
T_df<-data.frame(subsetted_input_df$T_mean)
colnames(T_df)<-group_name
}else{
B_to_add<-data.frame(subsetted_input_df$B_mean)
colnames(B_to_add)<-group_name
B_df<-cbind(B_df,B_to_add)
R_to_add<-data.frame(subsetted_input_df$R_mean)
colnames(R_to_add)<-group_name
R_df<-cbind(R_df,R_to_add)
T_to_add<-data.frame(subsetted_input_df$T_mean)
colnames(T_to_add)<-group_name
T_df<-cbind(T_df,T_to_add)
}
#rbind traces
traces_df<-rbind(traces_df,subsetted_input_df)
}
#Generate lights_df by averaging B, R, T
lights_df<-data.frame()
#Average features from traces_to_average for each row
for (i in 1:min_length) {
#Deal with row i
B_vec<-B_df[i,]
R_vec<-R_df[i,]
T_vec<-T_df[i,]
#Remove NAs from each individual vector
B_vec_no_NA<-B_vec[!is.na(B_vec)]
R_vec_no_NA<-R_vec[!is.na(R_vec)]
T_vec_no_NA<-T_vec[!is.na(T_vec)]
#Average each row
B_mean<-mean(B_vec_no_NA)
R_mean<-mean(R_vec_no_NA)
T_mean<-mean(T_vec_no_NA)
#Combine to form a row and add to averaged_trace
row_to_add<-data.frame(T_mean,B_mean,R_mean)
lights_df<-rbind(lights_df,row_to_add)
}
# Traces ------------------------------------------------------------------
write.csv(traces_df,"~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaTraces_df.csv")
write.csv(lights_df,"~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaLights_df.csv")
# Traces ------------------------------------------------------------------
write.csv(traces_df,"~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaTraces_df.csv",row.names = F)
write.csv(lights_df,"~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaLights_df.csv",row.names = F)
traces_df<-read.csv("~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaTraces_df.csv")
lights_df<-read.csv("~/Dropbox/SERI/My Papers/High Myopia and PLR/Analysis and Figures/HighMyopiaGlaucomaLights_df.csv")
span<-0.06
#Emmetropia LOESS
Emmetropia_LOESS<-loess(Pupil_mean~T_mean,traces_df,subset = Group=="Emmetropia",span = span)
Emmetropia_df<-subset(traces_df,Group=="Emmetropia")
Emmetropia_loessdf<-data.frame(Emmetropia_LOESS$fitted,Emmetropia_df$T_mean,Emmetropia_df$Pupil_SD,Emmetropia_df$Pupil_SE)
names(Emmetropia_loessdf)<-c("fitted","T_mean","SD","SE")
Emmetropia_loessdf$CI95<-1.96*Emmetropia_loessdf$SE
#Choose bars used for upr/lwr of geom_ribbon, eg SE:
Emmetropia_loessdf$upr<-Emmetropia_loessdf$fitted+Emmetropia_loessdf$SE
Emmetropia_loessdf$lwr<-Emmetropia_loessdf$fitted-Emmetropia_loessdf$SE
#GlaucomaHighMyopia LOESS
GlaucomaHighMyopia_LOESS<-loess(Pupil_mean~T_mean,traces_df,subset = Group=="GlaucomaHighMyopia",span = span)
GlaucomaHighMyopia_df<-subset(traces_df,Group=="GlaucomaHighMyopia")
GlaucomaHighMyopia_loessdf<-data.frame(GlaucomaHighMyopia_LOESS$fitted,GlaucomaHighMyopia_df$T_mean,GlaucomaHighMyopia_df$Pupil_SD,GlaucomaHighMyopia_df$Pupil_SE)
names(GlaucomaHighMyopia_loessdf)<-c("fitted","T_mean","SD","SE")
GlaucomaHighMyopia_loessdf$CI95<-1.96*GlaucomaHighMyopia_loessdf$SE
#Choose bars used for upr/lwr of geom_ribbon, eg CI95:
GlaucomaHighMyopia_loessdf$upr<-GlaucomaHighMyopia_loessdf$fitted+GlaucomaHighMyopia_loessdf$SE
GlaucomaHighMyopia_loessdf$lwr<-GlaucomaHighMyopia_loessdf$fitted-GlaucomaHighMyopia_loessdf$SE
#HighMyopia LOESS
HighMyopia_LOESS<-loess(Pupil_mean~T_mean,traces_df,subset = Group=="HighMyopia",span = span)
HighMyopia_df<-subset(traces_df,Group=="HighMyopia")
HighMyopia_loessdf<-data.frame(HighMyopia_LOESS$fitted,HighMyopia_df$T_mean,HighMyopia_df$Pupil_SD,HighMyopia_df$Pupil_SE)
names(HighMyopia_loessdf)<-c("fitted","T_mean","SD","SE")
HighMyopia_loessdf$CI95<-1.96*HighMyopia_loessdf$SE
#Choose bars used for upr/lwr of geom_ribbon, eg CI95:
HighMyopia_loessdf$upr<-HighMyopia_loessdf$fitted+HighMyopia_loessdf$SE
HighMyopia_loessdf$lwr<-HighMyopia_loessdf$fitted-HighMyopia_loessdf$SE
#Make plots
traces_plot<-ggplot()+
#Add ribbons for each group/diagnosis
geom_ribbon(data=Emmetropia_loessdf,aes(x=T_mean, ymin=lwr, ymax=upr), fill = "grey70", alpha = .4, linetype=0)+
geom_ribbon(data=GlaucomaHighMyopia_loessdf,aes(x=T_mean, ymin=lwr, ymax=upr), fill = "grey70", alpha = .4, linetype=0)+
geom_ribbon(data=HighMyopia_loessdf,aes(x=T_mean, ymin=lwr, ymax=upr), fill = "grey70", alpha = .4, linetype=0)+
#The rest of the plot stays the same
geom_smooth(data=traces_df,aes(x=T_mean, y=Pupil_mean, color = Group),method="loess",span=span,se=F)+
#Specify color scale (by factor order) and figure legends (by breaks) manually:
scale_color_manual(values=c("black","red","orange"),breaks=c("Emmetropia","HighMyopia","GlaucomaHighMyopia"),labels=c("Emmetropia  ","High Myopia  ","High Myopia with Glaucoma  "))+
theme_bw()+
theme(plot.title = element_text(hjust = 0.5),legend.direction = "horizontal",legend.position = "top",legend.title = element_blank())+
xlab("Time, s")+ylab("Pupil Constriction, % from baseline")+
theme(plot.title=element_text(size=20,face="bold"),text = element_text(size=16))+
scale_x_continuous(limits = c(0,60))+
coord_cartesian(xlim = c(2.5,57.5))+
scale_y_reverse()
#lights are best aligned using a single subject, consider just doing that
library(readxl)
ExampleLightTracePLR3031 <- read_excel("~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/General Analysis Scripts/ExampleLightTracePLR3031.xlsx")
LightTraceSubsetted<-ExampleLightTracePLR3031[1:length(lights_df$T_mean),]
LightTraceSubsetted$traces_T_mean<-lights_df$T_mean
lights_plot<-ggplot(LightTraceSubsetted)+
#lights_plot<-ggplot(lights_df)+
geom_line(aes(x=traces_T_mean,y=R_mean),color="red")+
geom_line(aes(x=traces_T_mean,y=B_mean),color="blue")+theme_classic()+
theme(axis.title.x = element_text(size = 14),plot.title=element_blank(),
axis.title.y = element_text(size=16,colour = "white"),axis.text.y = element_text(size=8,colour = "white"),
axis.text.x = element_blank(),axis.ticks = element_blank(),
axis.line.y = element_blank())+
xlab("Light Exposure")+
ylab(" ")+
#Fills in the lights:
geom_ribbon(aes(x=traces_T_mean, ymin=0-R_mean,ymax=R_mean), fill = "red", linetype=0,alpha=0.4)+
geom_ribbon(aes(x=traces_T_mean, ymin=0-B_mean,ymax=B_mean), fill = "blue", linetype=0,alpha=0.4)+
scale_x_continuous(limits = c(0,60))+
coord_cartesian(ylim = c(11, 240),xlim=c(2.5,57.5))
grobbed_traces<-arrangeGrob(traces_plot, lights_plot, nrow=2,heights=c(5, 1))
ggsave(filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/CompiledHighMyopiaTraces.tiff",
plot = grobbed_traces,dpi = 600,height = 5,width = 7)
ggsave(plot=GlaucMyopiaROC,filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/FinalHighMyopiaROC.tiff",dpi = 600,height=7,width=7)
"
Final High Myopia Analysis Using WHO High Myopia Criteria
"
"
Arriving at the final list of subjects:
138 glaucoma people. 21 are high myopia (3 are -5 to -6). Exclude 2 NS3, 1 PCIOL. 18 left.
159 Controls.
Remove 4 for family history of glaucoma.
Remove 14 for DM.
Remove 3 for PCIOL.
Remove 1 for cataract (NS3 PSC).
23 were HighM, 4 from clinic and 19 from gen pop. 28 were Emm, all gen pop.
"
FinalDataset <- read_excel("~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/CompiledAnalysisFiles/ComparingGlaucInHighMyopes.xlsx",sheet = "WHOClassified")
FinalDataset<-subset(FinalDataset,ExcludeForAgeMatching!="1")
run.group.stats(FinalDataset,"Myopia","age") #not different
FinalDataset$gender<-as.character(FinalDataset$gender)
FinalDataset$race<-as.character(FinalDataset$race)
FinalDataset$low_relia_1<-as.character(FinalDataset$low_relia_1)
FinalDataset$low_relia_5<-as.character(FinalDataset$low_relia_5)
NoGlauc<-subset(FinalDataset,Myopia!="GlaucomaHighMyopia")
FinalDataset$Glaucoma<-ifelse(FinalDataset$Myopia=="GlaucomaHighMyopia","Glaucoma","Control")
FinalDataset$Glaucoma<-factor(FinalDataset$Glaucoma,levels=c("Control","Glaucoma"))
require(pROC)
require(ggplot2)
n<-length(FinalDataset$sno)
zeroModel<-glm(data=FinalDataset,Glaucoma~1,family="binomial")
fullModel<-glm(data=FinalDataset,Glaucoma~(`Max Blue (%)`+`Max Red (%)`+`Phasic Blue (%)`+`Phasic Red (%)`+`Blue PIPR AUC 0-12s`)^2,family="binomial")
#fullModel<-glm(data=FinalDataset,Glaucoma~(`Max Blue (%)`+`Max Red (%)`+`Phasic Blue (%)`+`Phasic Red (%)`+`Blue PIPR AUC 0-12s`),family="binomial")
forward<-step(zeroModel,scope=list(upper=fullModel),direction="forward",trace=0,k=log(n))
backward<-step(fullModel,scope=list(lower=zeroModel),direction="backward",trace=0,k=log(n))
stepwise<-step(zeroModel,scope=list(upper=fullModel),direction="both",trace=0,k=log(n))
BIC(forward,backward,stepwise)
#Best model, ROC 0.9052:
model<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`+`Phasic Blue (%)`+`Phasic Red (%)`,family="binomial")
#Best model with 2 pred, ROC 0.8987
model1<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`+`Phasic Blue (%)`,family="binomial")
#Best model with 1 pred and on BIC, ROC 0.89
model2<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`,family="binomial")
"Considered models with 5 main glaucoma predictors. No interaction terms. Chose model that maximized AUC."
ROC_Data<-roc(model$y,model$fitted.values)
ROC_Stats<-coords(ROC_Data,"best",transpose=F,best.method = "youden")
GlaucMyopiaROC<-ggroc(ROC_Data,colour = "black", linetype = 1, size = 1.5)+
theme_bw()+
geom_segment(aes(x=1,y=0,xend=0,yend=1),alpha=0.5,linetype="dashed",data=data.frame())+
annotate("text", size=5,x=.25, y=.20, label = paste("Sensitivity = ",sprintf("%.3f",ROC_Stats$sensitivity)))+
annotate("text", size=5,x=.25, y=.15, label = paste("Specificity = ",sprintf("%.3f",ROC_Stats$specificity)))+
annotate("text", size=5,x=.25, y=.10, label = paste("AUC = ",sprintf("%.3f",ROC_Data$auc)))+
annotate("point",x=ROC_Stats[["specificity"]],y=ROC_Stats[["sensitivity"]],shape=4,color="black",size=5)+
ylab("\nSensitivity")+xlab("Specificity\n\n")+ggtitle("\n")+
scale_y_continuous(breaks = c(0,.2,.4,.6,.8,1))+
scale_x_reverse(breaks = c(0,.2,.4,.6,.8,1))+
theme(plot.title=element_text(size=16,face="bold", hjust = 0.5),
text = element_text(size=16),
panel.grid.minor = element_blank())
ggsave(plot=GlaucMyopiaROC,filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/FinalHighMyopiaROC.tiff",dpi = 600,height=7,width=7)
FinalDataset <- read_excel("~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/CompiledAnalysisFiles/ComparingGlaucInHighMyopes.xlsx",sheet = "WHOClassified")
FinalDataset<-subset(FinalDataset,ExcludeForAgeMatching!="1")
run.group.stats(FinalDataset,"Myopia","age") #not different
FinalDataset$gender<-as.character(FinalDataset$gender)
FinalDataset$race<-as.character(FinalDataset$race)
FinalDataset$low_relia_1<-as.character(FinalDataset$low_relia_1)
FinalDataset$low_relia_5<-as.character(FinalDataset$low_relia_5)
NoGlauc<-subset(FinalDataset,Myopia!="GlaucomaHighMyopia")
#Emm v HighM
file.remove("~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/summary_of_high_myopia_v_controls_stats.txt")
for (i in 6:(length(names(FinalDataset))-2)) {
out<-capture.output(run.group.stats(df_to_analyze = FinalDataset,x_var = "Myopia",y_var = names(FinalDataset)[i]))
cat(out, file="~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/summary_of_high_myopia_v_controls_stats.txt", sep="\n", append=TRUE)
}
library(ggpubr)
ROCplots<-ggarrange(p1,
p2,
nrow=1,ncol = 2,
labels = c("A","B"),
label.x = c(.05,.05),
label.y = c(.97,.97),
font.label = list(size=18,face="bold")
)
ROC_Data_MaxBlue<-roc(FinalDataset$Glaucoma,FinalDataset$`Max Blue (%)`)
FinalDataset$Glaucoma<-ifelse(FinalDataset$Myopia=="GlaucomaHighMyopia","Glaucoma","Control")
FinalDataset$Glaucoma<-factor(FinalDataset$Glaucoma,levels=c("Control","Glaucoma"))
require(pROC)
require(ggplot2)
n<-length(FinalDataset$sno)
zeroModel<-glm(data=FinalDataset,Glaucoma~1,family="binomial")
fullModel<-glm(data=FinalDataset,Glaucoma~(`Max Blue (%)`+`Max Red (%)`+`Phasic Blue (%)`+`Phasic Red (%)`+`Blue PIPR AUC 0-12s`)^2,family="binomial")
#fullModel<-glm(data=FinalDataset,Glaucoma~(`Max Blue (%)`+`Max Red (%)`+`Phasic Blue (%)`+`Phasic Red (%)`+`Blue PIPR AUC 0-12s`),family="binomial")
forward<-step(zeroModel,scope=list(upper=fullModel),direction="forward",trace=0,k=log(n))
backward<-step(fullModel,scope=list(lower=zeroModel),direction="backward",trace=0,k=log(n))
stepwise<-step(zeroModel,scope=list(upper=fullModel),direction="both",trace=0,k=log(n))
BIC(forward,backward,stepwise)
#Best model, ROC 0.9052:
model<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`+`Phasic Blue (%)`+`Phasic Red (%)`,family="binomial")
#Best model with 2 pred, ROC 0.8987
model1<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`+`Phasic Blue (%)`,family="binomial")
#Best model with 1 pred and on BIC, ROC 0.89
model2<-glm(data=FinalDataset,Glaucoma~`Max Blue (%)`,family="binomial")
"Considered models with 5 main glaucoma predictors. No interaction terms. Chose model that maximized AUC."
ROC_Data<-roc(model$y,model$fitted.values)
ROC_Stats<-coords(ROC_Data,"best",transpose=F,best.method = "youden")
GlaucMyopiaROC<-ggroc(ROC_Data,colour = "black", linetype = 1, size = 1.5)+
theme_bw()+
geom_segment(aes(x=1,y=0,xend=0,yend=1),alpha=0.5,linetype="dashed",data=data.frame())+
annotate("text", size=5,x=.25, y=.20, label = paste("Sensitivity = ",sprintf("%.3f",ROC_Stats$sensitivity)))+
annotate("text", size=5,x=.25, y=.15, label = paste("Specificity = ",sprintf("%.3f",ROC_Stats$specificity)))+
annotate("text", size=5,x=.25, y=.10, label = paste("AUC = ",sprintf("%.3f",ROC_Data$auc)))+
annotate("point",x=ROC_Stats[["specificity"]],y=ROC_Stats[["sensitivity"]],shape=4,color="black",size=5)+
ylab("\nSensitivity")+xlab("Specificity\n\n")+ggtitle("\n")+
scale_y_continuous(breaks = c(0,.2,.4,.6,.8,1))+
scale_x_reverse(breaks = c(0,.2,.4,.6,.8,1))+
theme(plot.title=element_text(size=16,face="bold", hjust = 0.5),
text = element_text(size=16),
panel.grid.minor = element_blank())
ggsave(plot=GlaucMyopiaROC,filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/FinalHighMyopiaROC.tiff",dpi = 600,height=7,width=7)
ROC_Data_MaxBlue<-roc(FinalDataset$Glaucoma,FinalDataset$`Max Blue (%)`)
ROC_Stats_MaxBlue<-coords(ROC_Data_MaxBlue,"best",transpose=F)
p1<-ggroc(ROC_Data_MaxBlue,colour = "black", linetype = 1, size = 1.5)+
theme_bw()+
theme(plot.title=element_text(size=20,face="bold", hjust = 0.5),text = element_text(size=16))+
geom_segment(aes(x=1,y=0,xend=0,yend=1),alpha=0.5,linetype="dashed",data=data.frame())+
annotate("text", size=5,x=.25, y=.25, label = paste("Threshold = ",sprintf("%.3f",ROC_Stats_MaxBlue$threshold)))+
annotate("text", size=5,x=.25, y=.20, label = paste("Sensitivity = ",sprintf("%.3f",ROC_Stats_MaxBlue$sensitivity)))+
annotate("text", size=5,x=.25, y=.15, label = paste("Specificity = ",sprintf("%.3f",ROC_Stats_MaxBlue$specificity)))+
annotate("text", size=5,x=.25, y=.10, label = paste("AUC = ",sprintf("%.3f",ROC_Data_MaxBlue$auc)))+
annotate("point",x=ROC_Stats_MaxBlue[["specificity"]],y=ROC_Stats_MaxBlue[["sensitivity"]],shape=4,color="black",size=5)+
ylab("Sensitivity")+xlab("Specificity")+ggtitle("\n")+
scale_y_continuous(breaks = c(0,.2,.4,.6,.8,1))+
scale_x_reverse(breaks = c(0,.2,.4,.6,.8,1))+
theme(plot.title=element_text(size=16,face="bold", hjust = 0.5),
text = element_text(size=16),
panel.grid.minor = element_blank())
p2<-ggplot(FinalDataset,aes(x=Glaucoma,y=`Max Blue (%)`))+
geom_boxplot(outlier.colour="black",outlier.shape=NA,outlier.size=4,fill="blue")+
geom_dotplot(stackdir = "center",binaxis = "y",dotsize = .5)+
geom_hline(yintercept = ROC_Stats_MaxBlue$threshold,color="black",linetype="dashed")+
labs(title="\nMaximum Constriction to Blue Light",
y="\nPupil Constriction, % from baseline")+
theme_bw()+ theme(axis.title.y = element_text(size = 17),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13),
axis.title.x = element_blank(),
axis.text.x = element_text(size=15),
plot.title = element_text(size = 16
,hjust = 0.5
)
)+
#scale_y_continuous(limits = c(31,73),breaks = c(40,50,60,70))+
coord_cartesian(ylim = c(31,76))
library(gridExtra)
library(ggpubr)
library(ggpubr)
ROCplots<-ggarrange(p1,
p2,
nrow=1,ncol = 2,
labels = c("A","B"),
label.x = c(.05,.05),
label.y = c(.97,.97),
font.label = list(size=18,face="bold")
)
#grid.arrange(ROCplots)
ggsave(plot=ROCplots,filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/ControlsvHighMyopesGlaucomaROC.tiff",dpi = 600,height = 7,width = 14)
p1<-ggroc(ROC_Data_MaxBlue,colour = "black", linetype = 1, size = 1.5)+
theme_bw()+
theme(plot.title=element_text(size=20,face="bold", hjust = 0.5),text = element_text(size=16))+
geom_segment(aes(x=1,y=0,xend=0,yend=1),alpha=0.5,linetype="dashed",data=data.frame())+
annotate("text", size=5,x=.25, y=.25, label = paste("Threshold = ",sprintf("%.1f",ROC_Stats_MaxBlue$threshold)))+
annotate("text", size=5,x=.25, y=.20, label = paste("Sensitivity = ",sprintf("%.3f",ROC_Stats_MaxBlue$sensitivity)))+
annotate("text", size=5,x=.25, y=.15, label = paste("Specificity = ",sprintf("%.3f",ROC_Stats_MaxBlue$specificity)))+
annotate("text", size=5,x=.25, y=.10, label = paste("AUC = ",sprintf("%.3f",ROC_Data_MaxBlue$auc)))+
annotate("point",x=ROC_Stats_MaxBlue[["specificity"]],y=ROC_Stats_MaxBlue[["sensitivity"]],shape=4,color="black",size=5)+
ylab("Sensitivity")+xlab("Specificity")+ggtitle("\n")+
scale_y_continuous(breaks = c(0,.2,.4,.6,.8,1))+
scale_x_reverse(breaks = c(0,.2,.4,.6,.8,1))+
theme(plot.title=element_text(size=16,face="bold", hjust = 0.5),
text = element_text(size=16),
panel.grid.minor = element_blank())
p2<-ggplot(FinalDataset,aes(x=Glaucoma,y=`Max Blue (%)`))+
geom_boxplot(outlier.colour="black",outlier.shape=NA,outlier.size=4,fill="blue")+
geom_dotplot(stackdir = "center",binaxis = "y",dotsize = .5)+
geom_hline(yintercept = ROC_Stats_MaxBlue$threshold,color="black",linetype="dashed")+
labs(title="\nMaximum Constriction to Blue Light",
y="\nPupil Constriction, % from baseline")+
theme_bw()+ theme(axis.title.y = element_text(size = 17),
panel.grid.minor = element_blank(),
axis.text.y = element_text(size=13),
axis.title.x = element_blank(),
axis.text.x = element_text(size=15),
plot.title = element_text(size = 16
,hjust = 0.5
)
)+
#scale_y_continuous(limits = c(31,73),breaks = c(40,50,60,70))+
coord_cartesian(ylim = c(31,76))
library(gridExtra)
library(ggpubr)
library(ggpubr)
ROCplots<-ggarrange(p1,
p2,
nrow=1,ncol = 2,
labels = c("A","B"),
label.x = c(.05,.05),
label.y = c(.97,.97),
font.label = list(size=18,face="bold")
)
#grid.arrange(ROCplots)
ggsave(plot=ROCplots,filename = "/Users/maxwellfinkelstein/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Plots/ControlsvHighMyopesGlaucomaROC.tiff",dpi = 600,height = 7,width = 14)
NoGlauc<-subset(FinalDataset,Myopia!="GlaucomaHighMyopia")
#Emm v HighM
file.remove("~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/summary_of_high_myopia_v_controls_stats.txt")
for (i in 6:(length(names(NoGlauc))-2)) {
out<-capture.output(run.group.stats(df_to_analyze = NoGlauc,x_var = "Myopia",y_var = names(NoGlauc)[i]))
cat(out, file="~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/summary_of_high_myopia_v_controls_stats.txt", sep="\n", append=TRUE)
}
warnings()
#p.adjusted for PLR vars from high myopia vs emm
p.adjust(p=0.1491,method="BH",n=15) #Median BSL
p.adjust(p=0.836,method="BH",n=15) #Phasic Blue
p.adjust(p=0.5926,method="BH",n=15) #Blue Latency
p.adjust(p=0.3141,method="BH",n=15) #Max Blue
p.adjust(p=0.5926,method="BH",n=15) #Blue Slope
p.adjust(p=0.8881,method="BH",n=15) #Blue PIPR 6
p.adjust(p=0.914,method="BH",n=15) #Blue PIPR AUC 0-12
p.adjust(p=0.05919,method="BH",n=15) #Blue PIPR <1.7
p.adjust(p=0.05919,method="BH",n=15) #Blue PIPR <1.7
p.adjust(p=0.09407,method="BH",n=15) #Blue PIPR >1.7
p.adjust(p=0.2171,method="BH",n=15) #Phasic Red
p.adjust(p=0.9029,method="BH",n=15) #Red Latnecy
p.adjust(p=0.4158,method="BH",n=15) #Max Red
p.adjust(p=0.3144,method="BH",n=15) #Red slope
p.adjust(p=0.1154,method="BH",n=15) #Red PIPR
p.adjust(p=0.06745,method="BH",n=15) #Net PIPR
View(FinalDataset)
View(FinalDataset)
View(FinalDataset)
output<-data.frame()
for (i in 7:(length(FinalDataset)-3)) {
row_name<-names(FinalDataset)[i]
#Subset by Myopia
#Emm
myopia_df_to_describe<-subset(FinalDataset,Myopia=="Emmetropia")
if(i==5|i==6){
#Gender / Race
emm_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
iqr<-as.character(as.numeric(t)-as.numeric(f))
#emm_entry<-paste(m," (",f,", ",t,")",sep="")
emm_entry<-paste(m," (",iqr,")",sep="")
}
#HighM
myopia_df_to_describe<-subset(FinalDataset,Myopia=="HighMyopia")
if(i==5|i==6){
#Gender / Race
highM_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
iqr<-as.character(as.numeric(t)-as.numeric(f))
#highM_entry<-paste(m," (",f,", ",t,")",sep="")
highM_entry<-paste(m," (",iqr,")",sep="")
}
#Glauc
myopia_df_to_describe<-subset(FinalDataset,Myopia=="GlaucomaHighMyopia")
if(i==5|i==6){
#Gender / Race
glauc_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
iqr<-as.character(as.numeric(t)-as.numeric(f))
#glauc_entry<-paste(m," (",f,", ",t,")",sep="")
glauc_entry<-paste(m," (",iqr,")",sep="")
}
#Add row
row_to_add<-data.frame(row_name,emm_entry,highM_entry,glauc_entry)
output<-rbind(output,row_to_add)
}
warnings()
write.csv(output,"~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/highmyopia_glauc_demographics_table.csv")
12/28 #Emm
100*12/28 #Emm
100*15/3 #Glauc
100*12/28 #Emm
100*15/18 #Glauc
100*11/23 #HighM
100*24/28 #Emm
100*22/23 #HighM
100*17/18 #Glauc
summary(myopia_df_to_describe[,i])[3]
summary(myopia_df_to_describe[,i])
sd(myopia_df_to_describe[,i])
myopia_df_to_describe[,i]
sd(myopia_df_to_describe[,i])
summary(myopia_df_to_describe[,i])
sd(myopia_df_to_describe[,i])
myopia_df_to_describe[,i]
myopia_df_to_describe[,i][[1]]
sd(myopia_df_to_describe[,i][[1]])
gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[4],split = ":")[[1]][2]) #mean
as.character(sd(myopia_df_to_describe[,i][[1]]))
sprintf("%.3f",sd(myopia_df_to_describe[,i][[1]]))
output<-data.frame()
for (i in 7:(length(FinalDataset)-3)) {
row_name<-names(FinalDataset)[i]
#Subset by Myopia
#Emm
myopia_df_to_describe<-subset(FinalDataset,Myopia=="Emmetropia")
if(i==5|i==6){
#Gender / Race
emm_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
mean<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[4],split = ":")[[1]][2]) #mean
sd<-sprintf("%.2f",sd(myopia_df_to_describe[,i][[1]]))
iqr<-as.character(as.numeric(t)-as.numeric(f))
#emm_entry<-paste(m," (",f,", ",t,")",sep="")
emm_entry<-paste(mean," (",sd,")",sep="")
}
#HighM
myopia_df_to_describe<-subset(FinalDataset,Myopia=="HighMyopia")
if(i==5|i==6){
#Gender / Race
highM_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
mean<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[4],split = ":")[[1]][2]) #mean
sd<-sprintf("%.2f",sd(myopia_df_to_describe[,i][[1]]))
iqr<-as.character(as.numeric(t)-as.numeric(f))
#emm_entry<-paste(m," (",f,", ",t,")",sep="")
highM_entry<-paste(mean," (",sd,")",sep="")
}
#Glauc
myopia_df_to_describe<-subset(FinalDataset,Myopia=="GlaucomaHighMyopia")
if(i==5|i==6){
#Gender / Race
glauc_entry<-sum(myopia_df_to_describe[,i]==1)/length(myopia_df_to_describe$sno)
}else{
m<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[3],split = ":")[[1]][2]) #median
f<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[2],split = ":")[[1]][2]) #1 quar
t<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[5],split = ":")[[1]][2]) #3 quar
mean<-gsub(" ","",strsplit(summary(myopia_df_to_describe[,i])[4],split = ":")[[1]][2]) #mean
sd<-sprintf("%.2f",sd(myopia_df_to_describe[,i][[1]]))
iqr<-as.character(as.numeric(t)-as.numeric(f))
#emm_entry<-paste(m," (",f,", ",t,")",sep="")
glauc_entry<-paste(mean," (",sd,")",sep="")
}
#Add row
row_to_add<-data.frame(row_name,emm_entry,highM_entry,glauc_entry)
output<-rbind(output,row_to_add)
}
write.csv(output,"~/Dropbox/SERI/Pupillometry Data/SUMMER 2019 DATA/DataAnalysis/Stats Output/highmyopia_glauc_demographics_table.csv")
#Emm
100*24/28
100*4/28
#HighM
100*16/23
100*4/23
100*3/23
#Glauc
100*6/18
100*3/18
100*9/18
